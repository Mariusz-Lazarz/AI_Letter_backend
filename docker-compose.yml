services:
  backend:
    build: .
    depends_on:
      redis:
        condition: service_healthy
    container_name: backend
    env_file:
      - .env
    restart: always
    networks:
      backend_net:
        ipv4_address: 172.20.0.10
  redis:
    image: redis:latest
    container_name: redis
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 5s
      retries: 10
    networks:
      backend_net:
        ipv4_address: 172.20.0.20

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
    restart: always
    networks:
      backend_net:
        ipv4_address: 172.20.0.30

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    volumes:
      - grafana-data:/var/lib/grafana
    restart: always
    networks:
      backend_net:
        ipv4_address: 172.20.0.40

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
    restart: always
    networks:
      backend_net:
        ipv4_address: 172.20.0.50

volumes:
  redis-data:
  prometheus-data:
  grafana-data:

networks:
  backend_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
